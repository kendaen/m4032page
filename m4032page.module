<?php

/**
 * @file
 * The 403 to page module functions.
 */

/**
 * Implements hook_menu().
 */
function m4032page_menu() {
  $items = array();
  $items['m4032page'] = array(
    'title'           => '403 to page callback',
    'page callback'   => 'm4032page_callback',
    // Everyone can access the url.
    'access callback' => TRUE,
    'type'            => MENU_CALLBACK,
  );
  $items['admin/config/system/m4032page'] = array(
    'type'              => MENU_NORMAL_ITEM,
    'title'             => '403 to page Settings',
    'description'       => 'Settings for 403 to page depend on user role',
    'page callback'     => 'drupal_get_form',
    'page arguments'    => array('m4032page_admin_settings'),
    'access arguments'  => array('administer site configuration'),
  );

  return $items;
}

/**
 * Page callback for m4032page.
 */
function m4032page_callback() {
  if (!empty(variable_get('m4032page'))) {
    global $user, $base_url;

    $m4032page = variable_get('m4032page');
    uasort($m4032page, 'drupal_sort_weight');

    $roles = array_keys($user->roles);

    $path = $base_url;
    foreach ($m4032page as $key => $info) {
      if (in_array(explode('_', $key)[2], $roles)) {
        $path = url($info['path']);
        break;
      }
    }

    header('Location: ' . $path, TRUE, 302);
    drupal_exit();
  }
}

/**
 * Settings form for redirection destination depend on roles.
 */
function m4032page_admin_settings() {
  $form = array();
  $roles = user_roles();

  $form['m4032page'] = array(
    '#type'        => 'fieldset',
    '#title'       => t('Redirect destination per role'),
    '#collapsible' => TRUE,
    '#collapsed'   => FALSE,
    '#tree'        => TRUE,
    '#theme'       => 'm4032page_settings',
    '#description' => t('If user has multiple roles,
the module will get one role with the top priority by order in below list.'),
  );

  $m4032page = variable_get('m4032page');

  foreach (array_keys($roles) as $rid) {
    $default_value
      = isset($m4032page['m4032page_role_' . $rid])
      ? $m4032page['m4032page_role_' . $rid]
      : array('path' => '', 'weight' => 0);

    $form['m4032page']['m4032page_role_' . $rid] = array(
      '#prefix' => '<div id="curve-attributes">',
      '#suffix' => '</div>',
      '#tree'   => TRUE,
    );

    $form['m4032page']['m4032page_role_' . $rid]['label'] = array(
      '#type'   => 'item',
      '#markup' => $roles[$rid],
    );

    $form['m4032page']['m4032page_role_' . $rid]['path'] = array(
      '#type'          => 'textfield',
      '#default_value' => $default_value['path'],
    );

    $form['m4032page']['m4032page_role_' . $rid]['weight'] = array(
      '#type'          => 'textfield',
      '#size'          => 3,
      '#default_value' => $default_value['weight'],
      '#attributes'    => array('class' => array('item-row-weight')),
    );
  }

  return system_settings_form($form);
}

/**
 * Implements hook_theme().
 */
function m4032page_theme($existing, $type, $theme, $path) {
  $themes = array(
    'm4032page_settings' => array(
      'render element' => 'element'
    ),
  );
  return $themes;
}

/**
 * Theme function.
 */
function theme_m4032page_settings($vars) {
  $element = $vars['element'];
  $element_children = array();

  foreach (element_children($element) as $key) {
    $element_children[$key] = $element[$key];
  }

  uasort($element_children, 'drupal_sort_weight');

  drupal_add_tabledrag('m403page_settings_table', 'order', 'sibling', 'item-row-weight');

  $header = array(
    'label'  => t('User Role'),
    'path'   => t('Redirect Path'),
    'weight' => t('Weight'),
  );

  $rows = array();
  foreach ($element_children as $element_child) {
    $row = array();
    $row['data'] = array();
    foreach ($header as $fieldname => $title) {
      $row['data'][] = drupal_render($element_child[$fieldname]);
      $row['class']  = array('draggable');
    }
    $rows[] = $row;
  }

  return theme('table', array(
    'header'     => $header,
    'rows'       => $rows,
    'attributes' => array('id' => 'm403page_settings_table'),
  ));
}
